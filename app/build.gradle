plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "fr.tahia910.android.positivityboost"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        applicationVariants.all { variant ->
            variant.buildConfigField "String", "DOG_API_KEY", getApiKey('DOG_API_KEY')
            variant.buildConfigField "String", "CAT_API_KEY", getApiKey('CAT_API_KEY')
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "1.4.6"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'fr.tahia910.android.positivityboost'
}

// TODO: put the key somewhere else
// https://gist.github.com/curioustechizen/9f7d745f9f5f51355bd6
def getApiKey(String keyName) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(keyName)
}

dependencies {

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    // MaterialDesign for XML theme
    implementation 'com.google.android.material:material:1.8.0'

    // Compose
    implementation platform('androidx.compose:compose-bom:2023.03.00')
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material:material"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation 'androidx.activity:activity-compose:1.7.1'
    implementation "androidx.compose.runtime:runtime"
    implementation "androidx.compose.runtime:runtime-livedata"

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'

    // Moshi
    implementation 'com.squareup.moshi:moshi:1.14.0'
    implementation('com.squareup.moshi:moshi-adapters:1.14.0')
    implementation 'com.squareup.moshi:moshi-kotlin:1.14.0'

    // Image library
    implementation 'com.github.skydoves:landscapist-glide:2.1.11'

    // Koin
    implementation "io.insert-koin:koin-core:3.4.0"
    testImplementation "io.insert-koin:koin-test:3.4.0"
    // Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:3.4.0"
    // Koin for Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:3.4.4"

    // OSS licenses
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.1'

    // Multiline chip group
    implementation "com.google.accompanist:accompanist-flowlayout:0.30.1"
}
